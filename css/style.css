/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* css reset */
/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
    2. Remove default margin
  */
* {
  margin: 0;
  padding: 0;
}
/*
    Typographic tweaks!
    3. Add accessible line-height
    4. Improve text rendering
  */
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
    5. Improve media defaults
  */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
    6. Remove built-in form typography styles
  */
input,
button,
textarea,
select {
  font: inherit;
}
/*
    7. Avoid text overflows
  */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
    8. Create a root stacking context
  */
#root,
#__next {
  isolation: isolate;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  /*parent element */
  height: 95vh; /*95% of viewport height */
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover; /* whatever the width of the viewport it always try to fit. */
  background-position: top;
  clip-path: polygon(
    0 0,
    100% 0,
    100% 75%,
    0 100%
  ); /* https://bennettfeely.com/clippy/ */

  position: relative;
}

/* the easiest way to center anything with the transform , top and left properties */

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;

  & .logo {
    height: 35px;
  }
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);

  & .heading-primary {
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden; /*stop animation unwanted shaking*/

    & .heading-primary-main {
      display: block;
      font-size: 60px;
      font-weight: 400;
      letter-spacing: 35px;

      /* animation-name: moveInLeft;
      animation-duration: 1s;
      animation-timing-function: ease-out; */

      /* shorthand */
      animation: moveInLeft 1s ease-out;
    }

    & .heading-primary-sub {
      display: block;
      font-size: 20px;
      font-weight: 700;
      letter-spacing: 17.4px;

      /* shorthand */
      animation: moveInRight 1s ease-out;
    }
  }
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* What i learn in this lecture */
/* 
A. What pseudo-elements and pseudo-classes are;
B. How and why to use the ::after pseudo-element
C. How to create a creative hover animation effect using the transition property.*/

/* Button animation */
